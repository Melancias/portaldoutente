stages:
- build
- deploy
#- ipbot
build_job:
  stage: build
  script:
  - echo "$USER"
  - echo "wow"
  - ls
  - pwd
  - cd Test*
  - mvn install
  - mv standalone-custom standalone-custom.xml
  - cp standalone-custom.xml target
  - cp Dockerfile target
  - cp putente.jks target
  - cp bucketkey.json target
  - cp notakey.key target
  - cd target
  - cp -rf /opt/bitnami/mysqldrivers/ main/
  - touch TestingProject.war.dodeploy
  - docker rmi -f portaldoutente
  - docker build --no-cache --rm -t portaldoutente .
deploy_job:
  stage: deploy
  script:
  - pwd
  - DOCKER_TAG=$(python /opt/random/random.py) || true
  - export PATH=$PATH:/usr/local/share/google/google-cloud-sdk/bin/
  - gcloud config set account quesejadesta@composite-watch-135111.iam.gserviceaccount.com
  - gcloud auth activate-service-account quesejadesta@composite-watch-135111.iam.gserviceaccount.com --key-file /opt/bitnami/key
  - gcloud config set project composite-watch-135111
  - gcloud config set compute/zone europe-west1-c
  - gcloud info
  - gcloud container clusters get-credentials cluster-1
  - docker tag portaldoutente gcr.io/composite-watch-135111/portaldoutente:$DOCKER_TAG
  - gcloud docker push gcr.io/composite-watch-135111/portaldoutente:$DOCKER_TAG
  #- kubectl stop services portal-utente
  #- kubectl stop replicationcontroller portal-utente
  #- kubectl run portal-utente --image=gcr.io/sapient-axle-129909/portaldoutente:latest --port 8080
  #- kubectl expose rc portal-utente --type=LoadBalancer --port 80 --target-port 8080
  - kubectl rolling-update portal-utente --image=gcr.io/composite-watch-135111/portaldoutente:$DOCKER_TAG
  - cp TestingProject/src/main/resources/import_new.sql import.sql
#  - mysql -h 104.155.38.109 -uwebserver -pBolachas_2 portaldoutente < import.sql
#ipbot_job:
#  stage: ipbot
#  script:
#  - pip install --upgrade apache-libcloud
#  - echo "A ir buscar IP"
#  - cd /opt/ip_bot/
#  - python ptrtest.py
