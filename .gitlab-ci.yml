stages:
- build
- deploy
- ipbot
build_job:
  stage: build
  script:
  - echo "$USER"
  - ls
  - pwd
  - cd Test*
  - mvn install
  - mv standalone-custom standalone-custom.xml
  - cp standalone-custom.xml target
  - cp Dockerfile target
  - cp putente.jks target
  - cd target
  - cp -rf /opt/bitnami/mysqldrivers/ main/
  - touch TestingProject.war.dodeploy
  - docker rmi -f portaldoutente
  - docker build --no-cache --rm -t portaldoutente .
deploy_job:
  stage: deploy
  script:
  - export PATH=$PATH:/usr/local/share/google/google-cloud-sdk/bin/
  - gcloud config set account malandros@sapient-axle-129909.iam.gserviceaccount.com
  - gcloud auth activate-service-account malandros@sapient-axle-129909.iam.gserviceaccount.com --key-file /opt/bitnami/key
  - gcloud config set project sapient-axle-129909
  - gcloud config set compute/zone us-central1-b
  - gcloud info
  - gcloud container clusters get-credentials cluster-1
  - docker tag portaldoutente gcr.io/sapient-axle-129909/portaldoutente
  - gcloud docker push gcr.io/sapient-axle-129909/portaldoutente:latest
  #- kubectl stop services portal-utente
  #- kubectl stop replicationcontroller portal-utente
  #- kubectl run portal-utente --image=gcr.io/sapient-axle-129909/portaldoutente:latest --port 8080
  #- kubectl expose rc portal-utente --type=LoadBalancer --port 80 --target-port 8080
  - kubectl rolling-update portal-utente --image=gcr.io/sapient-axle-129909/portaldoutente:latest
ipbot_job:
  stage: ipbot
  script:
  - pip install --upgrade apache-libcloud
  - echo "A ir buscar IP"
  - cd /opt/ip_bot/
  - python ptrtest.py
